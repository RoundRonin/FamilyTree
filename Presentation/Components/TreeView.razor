@page "/treeview"
@inject IJSRuntime JS
@inject IAppStateService AppState
@inject ITreeService TreeService

<div id="tree-container"></div>

@code {
    [JSInvokable]
    public void BlazorClickHandler(string personId)
    {
        Console.WriteLine($"BlazorClickHandler invoked with Person ID: {personId}");
        AppState.CurrentToolState.HandleId( int.Parse(personId));
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine("OnAfterRenderAsync firstRender");

            await JS.InvokeVoidAsync("registerBlazorClickHandler", DotNetObjectReference.Create(this));
            Console.WriteLine("Blazor click handler registered");

            var nodesHtml = TreeService.PersonList.Select(node => new {
                node.Id,
                node.Name,
                node.TreeDepth,
                Person = node, // TEMP
                HtmlId = $"person-card-container-{node.Id}"
            }).ToList();

            var links = TreeService.RelationshipList.Select(link => new
            {
                Source = link.PersonId1,
                Target = link.PersonId2,
                link.RelationshipType
            }).ToList();

            var componentName = "person-card";
            await JS.InvokeVoidAsync("renderD3Graph", nodesHtml, links, componentName, 180);

            AppState.OnChange += async () =>
            {
                await JS.InvokeVoidAsync("setDraggingOn", AppState.DraggingOn);
            };
        }
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged;
    }
}
