@using System
@using FamilyTreeBlazor.presentation.Models
@inject IAppStateService AppState

<div class="person-card">
    <MudCard Class="@GetCardClass(State)">
        <MudCardContent>
            <div style="display: flex; flex-direction: row; justify-content: space-between">
                <h6>@Person.Name</h6>
                <p style="color: @(Person.Sex ? "aqua" : "pink" )">@(Person.Sex ? "M" : "F")</p>
            </div>
            <p>@BirthDay.Year (@AgeHelper.GetAgeFromBirthDay(BirthDay))</p>
        </MudCardContent>
    </MudCard>
</div>

@code {
    [Parameter]
    public CardState State { get; set; } = CardState.Default;
    [Parameter]
    public required Person Person { get; set; }
    [Parameter]
    public DateTime BirthDay { get; set; } = DateTime.MinValue;

    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged; // Subscribe to state changes
    }

    public void Dispose()
    {
        AppState.OnChange -= StateHasChanged; // Unsubscribe from state changes
    }

    private string GetCardClass(CardState state)
    {
        return state switch
        {
            CardState.HighlightedChosen => "inward-border",
            CardState.HighlightedCommonAncestor => "common-ancestor-border",
            CardState.Choose => "choose-border",
            _ => ""
        };
    }
}
